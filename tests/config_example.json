{
	// configuration file version
	"version" : 1,

	///////////      LOGGER SECTION     ///////////
	//
	// can be skipped alltogether, by default logging is turned off.
	// logger section is a way to tell cacaine dealer of how and where to log it's actions.
	//
	// there are 3 types of loggers - STDOUT_LOGGER, FILE_LOGGER and SYSLOG_LOGGER, you specify the
	// one you want to use in "type" property. for FILE_LOGGER you must specify "file" field, absolute
	// path to the file where log will be written. for SYSLOG_LOGGER you must specify "identity" field,
	// which is syslog ident, as expected. you can also specify log filtering flags which are:
	// PLOG_INFO, PLOG_DEBUG, PLOG_WARNING, PLOG_ERROR - used to enable logging messages with specific
	// log level. PLOG_NONE - turn logger off. PLOG_MSG_TYPES - prepend each log message with log level
	// type. PLOG_MSG_TIME prepend each log message with timestamp. PLOG_ALL - log everything.
	// PLOG_BASIC is a combination of PLOG_MSG_TYPES | PLOG_MSG_TIME | PLOG_INFO, logging only basic
	// information about the system state. there is also a PLOG_LOG_INTRO flag which adds timestamped
	// header to each newly created log. usage examples:
	// 
	// log everything to stdout:
	// "logger" :
	// {
	//		"type" : "STDOUT_LOGGER",
	//		"flags" : "PLOG_ALL"
	// }
	//
	// log everything to syslog with identity "test_log":
	// "logger" :
	// {
	//		"type" : "SYSLOG_LOGGER",
	//		"identity" : "test_log"
	//		"flags" : "PLOG_ALL"
	// }
	//
	// log warnings and errors to file with path "/var/log/test.log", adding timestamps and message types:
	// "logger" :
	// {
	//		"type" : "FILE_LOGGER",
	//		"file" : "/var/log/test.log"
	//		"flags" : "PLOG_WARNING | PLOG_ERROR | PLOG_MSG_TIME | PLOG_MSG_TYPES"
	// }
	//
	// quick reminder, use "flags" : "PLOG_NONE" to turn logger off.


	"logger" :
	{
		//"type" : "FILE_LOGGER",
		//"flags" : "PLOG_ALL | PLOG_INTRO",
		//"file" : "/home/rimz/dealer.log",
 
		"type" : "STDOUT_LOGGER",
		"flags" : "PLOG_INFO | PLOG_INTRO"
		//"flags" : "PLOG_NONE"
	},

	///////////      SERVICES SECTION     ///////////
	//
	// must be present and consist at least one service.
	// this section tells cocaine dealer about existing cocaine apps.
	// 
	// described as following:
	//
	//	"services" :
	//	{
	//  	"service A alias" : {
	//			<...>
	//		},
	//  	"service B alias" : {
	//			<...>
	//		},
	//		<...>
	//	}

	"services" :
	{
		///////////      SERVICE SECTION     ///////////
		//	
		// this section describes a single cocaine app and the source of network nodes
		// on which that app is deployed
		//
		// minimal configuration goes like this:
		//
		//	"services" :
		//	{
		// 		"service alias" : {
		//			"app" : "",
		//			"autodiscovery" : {
		//				"source" : ""
		//				"type" : "",
		//			}
		//		}
		//	}
		//
		// "service alias" - alias to the cocaine app and settings
		// "app" - name of the deployed cocaine application
		// "autodiscovery" - section that describes source of the cocaine nodes hosts where app is deployed
		// "source" - source at which list of hosts resides. can be path to a file or a url
		// "type" - the way to retrieve hosts list from source, can be "FILE" or "HTTP"
		//
		// example:
		//
    	// 	"cocaine_service" : {
		//		"app" : "my_app",
		//		"autodiscovery" : {
		//			"source" : "http://somehost/somepath"
		//			"type" : "HTTP",
		//		}
		//	}
		//
		// note, source of the hosts must have a list of hosts with ip adresses/hostnames and control port values,
		// for example:
		//
		// 192.168.0.2:5000
		// 192.168.0.34:5000
		// somehostname:5000
		// ...
		//
		// also, it is allowed to have no hosts specicied at the source.

    	"rimz_app" : {
			"app" : "rimz_app@1",
			"autodiscovery" : {
				"type" : "FILE",
				"source" : "/home/rimz/cocaine-core/tests/hosts"
			}
		}
		//,
		// "rimz_app2" : {
		//	"app" : "rimz_app@1",
		//	"autodiscovery" : {
		//		"type" : "HTTP",
		//		"source" : "http://deltax/"
		//	}
		//}
	}
}
